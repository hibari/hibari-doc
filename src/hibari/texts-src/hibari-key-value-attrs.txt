// -*- Doc -*-
// vim: set syntax=asciidoc:

//
// Copyright (c) 2005-2017 Hibari developers.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

[options="header", cols="^,^,^,<"]
|=========
| Attribute Name | Erlang data type | Storage Location | Description
|Key | binary | RAM | A binary blob of any size, though due to RAM storage the key should be small enough for all keys to fit in RAM.
| Value | binary | RAM or disk | A binary blob of any size, though practical constraints limit value blobs to 16MB or so.
| Timestamp | integer | RAM | A monotonically increasing counter, usually (but not always) based on the client's wall-clock time.  Updating a key with a timestamp smaller than the key's current timestamp is not permitted.
| Expiration Time | integer | RAM | A UNIX `time_t` representing the expiration time for a key.  A value of 0 means no expiration, and no RAM overhead is required.
| Flags | list | RAM | This attribute cannot be represented in plain SQL.  It is a list of atoms and/or {atom(), term()} pairs.  Heavy use of this attribute is discouraged due to RAM-based storage.
|=========
